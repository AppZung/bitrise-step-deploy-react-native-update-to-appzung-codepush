#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Deploy React Native updates to AppZung CodePush
summary: |
  This step uses AppZung CLI to deploy your React Native update to AppZung CodePush
description: |
  This installs the AppZung CLI and use it to deploy your React Native update to AppZung CodePush. This way, your new features or bug fixes will become available to your users much earlier than if you were going through the app store reviews. Sign up first at https://appzung.com
website: https://appzung.com
source_code_url: https://github.com/appzung/bitrise-step-deploy-react-native-update-to-appzung-codepush
support_url: https://github.com/appzung/bitrise-step-deploy-react-native-update-to-appzung-codepush

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
   - react-native

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - deploy

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
deps:
  brew:
  - name: node
  apt_get:
  - name: node


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - api_key:
    opts:
      title: "API Key"
      summary: "AppZung API key for authentication"
      description: |
        An API key that has access to this project.
      is_required: true
      is_sensitive: true

  - release_channel:
    opts:
      title: "Release channel"
      summary: "The release channel ID to deploy to"
      description: |
        Release channel (eg. "myReleaseChannelDescription/c95d7950-228c-4f47-8abb-4e275050ca8e")
      is_required: true

  - mandatory: "no"
    opts:
      title: "Mandatory update"
      summary: "Whether this release should be considered mandatory"
      description: |
        Specifies whether this release should be considered mandatory
      value_options:
        - "yes"
        - "no"

  - rollout:
    opts:
      title: "Rollout percentage"
      summary: "Percentage of users who should receive this update"
      description: |
        Percentage points of users this release should be available to (eg. 95 for 95%)
      is_required: false

  - target_binary_version:
    opts:
      title: "Target binary version"
      summary: "App version this release is compatible with"
      description: |
        Semver version that specifies the binary app version this release is compatible with. If left unspecified, it will try to find the correct version.
      is_required: false

  - private_key_path:
    opts:
      title: "Code signing private key path"
      summary: "Path to the private key file for code signing"
      description: |
        Specifies the location of a private key to sign the release with.
        This should be a path relative to your project root.
      is_required: false

  - description_from_git: "no"
    opts:
      title: "Use Git Commit Message"
      summary: "Use the current git commit message as release description"
      description: |
        Use the current git commit message as the release description
      value_options:
        - "yes"
        - "no"

  - extra_flags: ""
    opts:
      title: "Additional Flags"
      summary: "Additional command line flags"
      description: |
        Any additional command line flags you want to pass to the deploy command.
        Example: "--disable-duplicate-release-error --use-hermes"
      is_required: false
